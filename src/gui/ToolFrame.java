package gui;

import dataTypes.FrameModel;
import dataTypes.LogAreaListiner;
import dataTypes.TaskSchedulerBoard;
import enviroment.Constants;
import enviroment.EnviromentHolder;
import eventHendlers.MenuHandler;

import java.awt.Component;
import java.awt.Container;
import java.util.HashMap;
import java.awt.Dimension;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JPanel;

public class ToolFrame extends javax.swing.JFrame {
	public ToolFrame() {
	}



//    /**
//     * Creates new form FramePanel
//     */
//    public /*void*/ ToolFrame() {
//    	
//    	////////////DELETE IT AFTER TESTING////////////
//        EnviromentHolder.loadPreferences();
//    	getContentPane().setMaximumSize(new Dimension(500, 500));
//    	getContentPane().setFocusable(false);
//    	getContentPane().setName("aacontentPane");
//    	
//    	loadMenuItems();
//        preLoadEnvierment();
//        initComponents();
//        postLoadEnvierment();
//    	
//    }


	private void loadMenuItems() {
		
		menuBar = new JMenuBar();
		setJMenuBar(menuBar);
    	
    	mnNewMenu = new JMenu("File");
    	menuBar.add(mnNewMenu);
    	
    	openLogsmnit = new JMenuItem(Constants.LOG_MENU_ITEM);
    	openLogsmnit.addActionListener(new MenuHandler(this));
    	mnNewMenu.add(openLogsmnit);
    	
    	reloadEnvmnit = new JMenuItem(Constants.RELOAD_ENV_MENU_ITEM);
    	reloadEnvmnit.addActionListener(new MenuHandler(this));
    	mnNewMenu.add(reloadEnvmnit);
    	
    	debugMode = new JMenuItem(EnviromentHolder.DEBUG_MODE ? Constants.UNSET_DEBUG_MODE : Constants.SET_DEBUG_MODE);
    	debugMode.addActionListener(new MenuHandler(this));
    	mnNewMenu.add(debugMode);
    	
	}
    
    
    
    public void LoadToolFrame() {
        
        EnviromentHolder.loadPreferences();
    	getContentPane().setMaximumSize(new Dimension(500, 500));
    	getContentPane().setFocusable(false);
    	//getContentPane().setName("aacontentPane");
    	
    	loadMenuItems();
        preLoadEnvierment();
        initComponents();
        postLoadEnvierment();

    }
    
    public void ReLoadToolFrame() {

    	EnviromentHolder.loadPreferences();
    	loadMenuItems();

    	for (JComboBox ddl : EnviromentHolder.ddlList) {
    		ddl.removeAllItems();

    		switch (ddl.getName()) {
    		case Constants.DDL_VERSION_NAME :
    			ddl.setModel(new javax.swing.DefaultComboBoxModel(EnviromentHolder.getDdlForVersions()));
    			break;

    		case Constants.DDL_BB_NAME :
    			ddl.setModel(new javax.swing.DefaultComboBoxModel(EnviromentHolder.getDdlForBB()));
    			break;

    		case Constants.DDL_TLG_DOMAIN_NAME :
    			ddl.setModel(new javax.swing.DefaultComboBoxModel(EnviromentHolder.getTlgDomains()));
    			break;
    		default:
    			break;
    		}	
    	}
    }
    



    private void preLoadEnvierment() {
        FrameModel frameModel = new FrameModel();
        EnviromentHolder.setFrameModel(frameModel);
        TaskSchedulerBoard gameSchedulers = new TaskSchedulerBoard();
        EnviromentHolder.setWorkersScheduler(gameSchedulers);
        
        //EnviermentHolder.setToolFrame(this);
    }
    
    private void postLoadEnvierment() {
        EnviromentHolder.setToolFrame(this);
        HashMap<String, LogAreaListiner> nn = loadOutputLogs(this);
        EnviromentHolder.setComponentMap(nn);
    }
    
public  HashMap<String, LogAreaListiner> loadOutputLogs(final Container c) {
    Component[] comps = c.getComponents();
    HashMap<String, LogAreaListiner> compList = new HashMap<String, LogAreaListiner>();
    for (Component comp : comps) {
        if (comp instanceof OutputPanel){
      compList.put(comp.getName(), (OutputPanel)comp);
        }
      if (comp instanceof Container) {
        compList.putAll(loadOutputLogs((Container) comp));
      }
    }
    return compList;
  }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        commandsAreaPanel = new javax.swing.JPanel();
        commandsAreaPanel.setBounds(0, 63, 989, 540);
        commandsPanel = new javax.swing.JPanel();
        commandsPanel.setBounds(0, 0, 991, 540);
        commandsTabbedPane = new javax.swing.JTabbedPane();
        commandsTabbedPane.setBounds(6, 0, 984, 661);
        localBuildTAB = new javax.swing.JPanel();
        localBuildLog = new gui.OutputPanel();
        //localBuildLog.setBounds(220, 6, 764, 480);
        runLocalBuildPanel = new gui.RunLocalBuildPanel();
        runLocalBuildPanel.setBounds(6, 37, 208, 339);
        buildCCPanelTAB = new javax.swing.JPanel();
        runBuildCCPanel = new gui.RunBuildCCPanel();
        runBuildCCPanel.setBounds(6, 34, 207, 314);
        buildCCLog = new gui.OutputPanel();
        //buildCCLog.setBounds(219, 6, 765, 482);
        generalTAB = new javax.swing.JPanel();
        generalPanel = new gui.GeneralPanel();
        generalPanel.setBounds(6, 39, 204, 376);
        APITeam = new javax.swing.JPanel();
        APITeam.setBounds(6, 0, 983, 57);
        APITeam.setMaximumSize(new Dimension(100, 100));
        apilbl = new javax.swing.JLabel();
        apilbl.setBounds(404, 18, 210, 17); 
        bbManagementPanel = new BbManagementPanel();
        bbManagementPanel.setBounds(6, 33, 206, 305);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        localBuildLog.setName(Constants.LOCAL_BUILD_LOGS);

        commandsTabbedPane.addTab("Local Build", localBuildTAB);
        localBuildTAB.setLayout(null);
        localBuildTAB.add(runLocalBuildPanel);
        localBuildTAB.add(localBuildLog);

        buildCCLog.setName(Constants.BUILD_CC_LOGS);

        commandsTabbedPane.addTab("Build CC", buildCCPanelTAB);
        buildCCPanelTAB.setLayout(null);
        buildCCPanelTAB.add(runBuildCCPanel);
        buildCCPanelTAB.add(buildCCLog);
        bbTAB = new javax.swing.JPanel();

        commandsTabbedPane.addTab("BB management", bbTAB);
        
        bbManagementLog = new OutputPanel();
        bbManagementLog.setName(Constants.BB_MANAGMENT_LOG);
        bbTAB.setLayout(null);
        bbTAB.add(bbManagementPanel);
        bbTAB.add(bbManagementLog);
        generalLogs = new OutputPanel();
        generalLogs.setName(Constants.GENERAL_LOGS);
        commandsTabbedPane.addTab("General", generalTAB);
        generalTAB.setLayout(null);
        generalTAB.add(generalPanel);
        generalTAB.add(generalLogs);

        commandsTabbedPane.getAccessibleContext().setAccessibleName("CC Build");
        commandsPanel.setLayout(null);
        commandsPanel.add(commandsTabbedPane);
        getContentPane().setLayout(null);

        APITeam.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "amdocs", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, null, new java.awt.Color(255, 0, 0)));

        apilbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        apilbl.setForeground(new java.awt.Color(255, 51, 0));
        apilbl.setText(Constants.TOOL_TITLE);
        apilbl.setOpaque(true);
        APITeam.setLayout(null);
        APITeam.add(apilbl);
        getContentPane().add(APITeam);
        getContentPane().add(commandsAreaPanel);
        commandsAreaPanel.setLayout(null);
        commandsAreaPanel.add(commandsPanel);
        this.setSize(1004, 637);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        //pack();
    }// </editor-fold>//GEN-END:initComponents


    private gui.OutputPanel buildCCLog;
    private javax.swing.JPanel buildCCPanelTAB;
    private javax.swing.JPanel commandsAreaPanel;
    private javax.swing.JPanel commandsPanel;
    private javax.swing.JTabbedPane commandsTabbedPane;
    private gui.OutputPanel generalLogs;
	private gui.GeneralPanel generalPanel;
    private javax.swing.JPanel generalTAB;
    private javax.swing.JLabel apilbl;
    private javax.swing.JPanel bbTAB;
    private javax.swing.JPanel APITeam;
    private gui.OutputPanel localBuildLog;
    private javax.swing.JPanel localBuildTAB;
    private gui.RunBuildCCPanel runBuildCCPanel;
    private gui.RunLocalBuildPanel runLocalBuildPanel;
    private BbManagementPanel bbManagementPanel;
    private gui.OutputPanel bbManagementLog;
    private JMenuBar menuBar;
    private JMenu mnNewMenu;
    private JMenuItem openLogsmnit;
    private JMenuItem reloadEnvmnit;
    private JMenuItem debugMode;

    
    // End of variables declaration//GEN-END:variables
    
    public OutputPanel getLocalBuildLog() {
        return localBuildLog;
    }
    
    public RunLocalBuildPanel getRunLocalBuildPanel() {
        return runLocalBuildPanel;
    }
    
    public RunBuildCCPanel getRunBuildCCPanel() {
        return runBuildCCPanel;
    }
    
    public gui.OutputPanel getGeneralLogs() {
		return generalLogs;
	}
}
